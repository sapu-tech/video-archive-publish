Originally edited by wcw
这次用dv录的视频，由于dv本身似乎对单个文件的大小有限制，所以上下半场都被自动分成了3段，4个曲子被从中间斩断了（
目标是实现：1. 先把可以完整剪辑的节目剪出来；2. 想办法把那4个曲子的视频拼接在一起；

实现1：
0. 将源视频用合法字母和符号重新命名，注意不要有空格
1. 观看源视频，用纸笔记录下所有需要剪切的时间点，精确到秒即可
2. 用VS Code打开18_dzh.sh，在1phase下替换文件名和对应时间点，注意设定输出文件目录
3. 保存，在源视频文件夹中右键点击Git Bash here，输入./18_dzh.sh 1phase，运行18_dzh.sh中的1phase
4. 注意由于关键帧的存在，1phase运行完后，所有剪出来的视频在开头处都准确剪辑了，但是在结尾处却往往不能准确剪辑，会有多出来的部分
（补充：之前的发生的是，由于先对完整视频进行压制了，所以keyframe变少，不能准确剪出开始位置。但是今天的情况是还没有压制，关键帧很多，
  所以（看起来）精确剪出了开始时间。结尾时间变化还是很迷，没有找到原因。如果录很高清的视频，如1080p/50mbps设置，最好先压制再剪辑）
5. 根据之前纸笔的记录的时间点，前后作差计算所需每个节目的时长，继续用VS Code更改18_dzh.sh中的2phase
6. 保存，经过第一次剪辑后的视频文件夹中右键点击Git Bash here，输入./18_dzh.sh 2phase，运行18_dzh.sh中的2phase，注意设定输出文件目录
7. 此后1的效果就可以实现完成

实现2：
0. 在实现1后的视频文件夹中右键点击Git Bash here，输入ffmpeg -i "concat:XXX.XXX|XXX.XXX" -c copy XXX.XXX，其中的X需要用文件名和扩展名替换，前面的两个是待合并的视频，最后一个是输出文件的名称，可以自己写
1. 随后按回车，即开始合并

压制：
0. 推荐使用“小丸工具箱”，可免费下载
1. 选择CRF为23.5即可，拖拽视频进入“批量压制”（CRF越小则视频质量越高，CRF小于18时人眼无法分辨，视频文件却随CRF变小而变大，CRF高于27时则人眼无法接受，CRF设为23.5或22即可
2. 点击“压制”，待完成后即可输出质量仍可接受但文件大小减小了许多的视频（因为码率降低了，压制是去除了冗余的码率）